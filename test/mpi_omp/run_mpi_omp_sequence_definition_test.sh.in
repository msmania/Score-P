#!/bin/bash

##
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2016,
## Technische Universitaet Darmstadt, Germany
##
## Copyright (c) 2022,
## Technische Universitaet Dresden, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license. See the COPYING file in the package base
## directory for details.
##

## file       run_mpi_omp_sequence_definition_test.sh.in

OTF2_PRINT="@OTF2_BINDIR@/otf2-print"
SINGLE_DIR="scorep_single_definitions_test_dir"
SEQUENCE_DIR="scorep_sequence_definitions_test_dir"

rm -rf $SEQUENCE_DIR $SINGLE_DIR

###############################################################################
# run both versions
###############################################################################

SCOREP_ENABLE_TRACING=1 SCOREP_ENABLE_SYSTEM_TREE_SEQUENCE_DEFINITIONS=0 SCOREP_EXPERIMENT_DIRECTORY=$SINGLE_DIR OMP_NUM_THREADS=4 mpiexec -np 4 ./sequence_definition_test

SCOREP_ENABLE_TRACING=1 SCOREP_ENABLE_SYSTEM_TREE_SEQUENCE_DEFINITIONS=1 SCOREP_EXPERIMENT_DIRECTORY=$SEQUENCE_DIR OMP_NUM_THREADS=4 mpiexec -np 4 ./sequence_definition_test

###############################################################################
# Check rank mapping
#
# Idea: the executable writes an parameter on each rank that has the value of
# the MPI rank. Check whether the parameter value matches the definition
# rank.
###############################################################################

a=`$OTF2_PRINT $SEQUENCE_DIR/traces.otf2 | grep PARAMETER_INT64 | grep "MPI rank" | cut -c 44`

b=`$OTF2_PRINT $SEQUENCE_DIR/traces.otf2 | grep PARAMETER_INT64 | grep "MPI rank" | cut -c 102`

if [ "x$a" = "x$b" ]; then
  echo "MPI rank mappings: ok"
else
  echo "ERROR: Wrong mapping of MPI ranks:"
  $OTF2_PRINT scorep_sequence_definitions_test_dir/traces.otf2 | grep PARAMETER_INT64 | grep "MPI rank"
  exit 1
fi

###############################################################################
# Check location mapping
#
# Idea: the executable writes an parameter on each location that has the
# value of the location id. Check whether the parameter value matches the
# location id in the definitions.
###############################################################################

a=`$OTF2_PRINT $SEQUENCE_DIR/traces.otf2 | grep PARAMETER_INT64 | grep "Thread id" | cut -c 33-44 | sed 's/ //g'`

b=`$OTF2_PRINT $SEQUENCE_DIR/traces.otf2 | grep PARAMETER_INT64 | grep "Thread id" | cut -c 103-`

if [ "x$a" = "x$b" ]; then
  echo "Thread mappings: ok"
else
  echo "ERROR: Wrong mapping of thread mappings:"
  $OTF2_PRINT scorep_sequence_definitions_test_dir/traces.otf2 | grep PARAMETER_INT64 | grep "Thread id"
  exit 1
fi

###############################################################################
# Compare events on each location
###############################################################################

locations=`$OTF2_PRINT -G $SINGLE_DIR/traces.otf2 | grep "LOCATION " | cut -c27-38`

for i in $locations; do
    $OTF2_PRINT -L $i $SEQUENCE_DIR/traces.otf2 | cut -c50-65 --complement > sequence.trace
    $OTF2_PRINT -L $i $SINGLE_DIR/traces.otf2 | cut -c50-65 --complement > single.trace
    if [ "`diff sequence.trace single.trace`" ]; then
        diff sequence.trace single.trace
        exit 1
    else
        echo "Event comparison location $i: ok"
    fi
done

rm single.trace sequence.trace

exit 0
