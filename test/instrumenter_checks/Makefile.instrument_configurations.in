## -*- mode: makefile -*-

## @configure_input@

##
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2012,
## RWTH Aachen University, Germany
##
## Copyright (c) 2009-2012,
## Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##
## Copyright (c) 2009-2012, 2014, 2016, 2021,
## Technische Universitaet Dresden, Germany
##
## Copyright (c) 2009-2012,
## University of Oregon, Eugene, USA
##
## Copyright (c) 2009-2014,
## Forschungszentrum Juelich GmbH, Germany
##
## Copyright (c) 2009-2012,
## German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##
## Copyright (c) 2009-2012,
## Technische Universitaet Muenchen, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license.  See the COPYING file in the package base
## directory for details.
##

## file       test/instrumenter_checks/Makefile.instrument_configurations.in

all:

#------------------------------------------------------------------------------
# Common settings
#------------------------------------------------------------------------------

TOOLS_BINDIR               = @BINDIR@
INSTRUMENTERCHECK_SRCDIR   = @abs_top_srcdir@/../test/instrumenter_checks
PARADIGM_SRCDIR            = $(INSTRUMENTERCHECK_SRCDIR)/$(PARADIGM)/src
INSTRUMENTERCHECK_BUILDDIR = @abs_top_builddir@/../installcheck/instrumenter_checks
BINDIR                     = $(INSTRUMENTERCHECK_BUILDDIR)/bin
PREPS_FILE                 = $(INSTRUMENTERCHECK_BUILDDIR)/configurations_$(PARADIGM)
# we build these checks always without memory instrumentation
SCOREP_ARGS     = --nomemory

@SCOREP_COMPILER_FC_IBM_TRUE@FD_FLAG="-WF,"
@SCOREP_COMPILER_FC_IBM_FALSE@FD_FLAG=""

SCOREP_INSTRUMENTER_CHECKS_VERBOSE = $(V)

scorep__tty_colors = \
red=; grn=; blu=; mgn=; std=; \
test "X$(AM_COLOR_TESTS)" != Xno \
&& test "X$$TERM" != Xdumb \
&& { test "X$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
&& { \
  red='[0;31m'; \
  grn='[0;32m'; \
  blu='[1;34m'; \
  mgn='[0;35m'; \
  std='[m'; \
}

#------------------------------------------------------------------------------
# Instrument possible configurations:
# If we have a Makefile in PARADIGM_SRCDIR/<code>/<language>, create
# an object directory (obj_dir) for every possible scorep option
# configuration, copy the Makefile into this directory an call 'make
# -C obj_dir <code>' additionally providing several make
# variables. The possible configurations are listed in PREPS_FILE and
# are generated from
# scorep_configure_dir/installcheck/instrumenter_checks/instrumenter-configurations.sh.
# Instrumented codes can be found in BINDIR.
#------------------------------------------------------------------------------
instrument-configurations: $(PREPS_FILE) $(PARADIGM_SRCDIR) $(BINDIR)
	@$(scorep__tty_colors); \
	fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	obj_dir_prefix="`pwd`/build"; \
	for code in $(CODES); do \
            for language in $(LANGUAGES); do \
                if test -e $(PARADIGM_SRCDIR)/$$code/$$language/Makefile; then \
                    while read line; do \
                        options="$(SCOREP_ARGS)"; \
                        if test "x$$line" != "xdefault"; then \
                            options="$$options `echo $$line | awk '{for (i=1; i<= NF; i++) {options = options " --" $$i} } END{print options}'`"; \
                        fi; \
                        prep="$(TOOLS_BINDIR)/scorep $$options"; \
                        suffix=`echo $$line | awk '{for (i=1; i<= NF; i++) {gsub("=", "-"); gsub(":", "-"); suffix = suffix "_" $$i} } END{print suffix}'`; \
                        obj_dir="$$obj_dir_prefix/$$code/$$language/$$suffix"; \
                        mkdir -p "$$obj_dir"; \
                        cp $(PARADIGM_SRCDIR)/$$code/$$language/Makefile "$$obj_dir"/; \
                        if test "$(SCOREP_INSTRUMENTER_CHECKS_VERBOSE)" = "1"; then \
                            set -x; \
                            options="$$options --verbose"; \
                        else \
                            echo "  GEN     $${mgn}$(BINDIR)/$${code}-$(PARADIGM)-$${language}$${suffix}$$std"; \
                        fi; \
                        unset POMP_CFLAGS; \
                        unset POMP_FFLAGS; \
                        case " $$line " in (*" pomp "*) \
                            POMP_CFLAGS="-DSCOREP_POMP_USER"; \
                            POMP_FFLAGS="$(FD_FLAG)$$POMP_CFLAGS" ;; \
                        esac; \
                        $(MAKE) -C $$obj_dir $(AM_MAKEFLAGS) \
                            PREP="$$prep" \
                            SUFFIX="$$suffix" \
                            OBJDIR="$$obj_dir" \
                            BINDIR="$(BINDIR)" \
                            TOOLS_BINDIR="$(TOOLS_BINDIR)" \
                            CODE="$$code" \
                            LANGUAGE="$$language" \
                            SRCDIR="$(PARADIGM_SRCDIR)/$$code/$$language" \
                            INSTRUMENTERCHECK_BUILDDIR="$(INSTRUMENTERCHECK_BUILDDIR)" \
                            INSTRUMENTERCHECK_SRCDIR="$(INSTRUMENTERCHECK_SRCDIR)" \
                            PARADIGM="$(PARADIGM)" \
                            CC="$(CC)" \
                            CXX="$(CXX)" \
                            F77="$(F77)" \
                            FC="$(FC)" \
                            NVCC="$(NVCC)" \
                            HIPCC="$(HIPCC)" \
                            LIBS="$(LIBS)" \
                            CFLAGS="$(CFLAGS) $$POMP_CFLAGS" \
                            CXXFLAGS="$(CXXFLAGS) $$POMP_CFLAGS" \
                            F77FLAGS="$(FFLAGS) $$POMP_FFLAGS" \
                            FCFLAGS="$(FCFLAGS) $$POMP_FFLAGS" \
                            CUFLAGS="$(CUFLAGS)" \
                            $$code && \
                        set +x && \
                        $(INSTRUMENTERCHECK_BUILDDIR)/check-instrumentation.sh $(PARADIGM) $(BINDIR)/$${code}-$(PARADIGM)-$${language}$${suffix} $$options || eval $$failcom; \
                    done < $(PREPS_FILE); \
                fi; \
            done; \
        done

$(BINDIR):
	mkdir -p $(BINDIR)

$(PREPS_FILE):
	@echo "Cannot find installcheck/instrumenter_checks/configurations_$(PARADIGM). Please check instrumenter-configurations.sh[.in]"
	@exit 1
