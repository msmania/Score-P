#!/bin/sh

#  @configure_input@

#
#  This file is part of the Score-P software (http://www.score-p.org)
#
#  Copyright (c) 2015, 2019,
#  Technische Universitaet Dresden, Germany
#
#  Copyright (c) 2022, 2024,
#  Forschungszentrum Juelich GmbH, Germany
#
#  This software may be modified and distributed under the terms of
#  a BSD-style license.  See the COPYING file in the package base
#  directory for details.
#

#  file test/constructor_checks/generate_makefile.sh.in

SRCDIR="@abs_top_srcdir@/.."
BINDIR="@BINDIR@"
OBJEXT="@OBJEXT@"
EXEEXT="@EXEEXT@"

CC="@CC@"
CXX="@CXX@"
FC="@FC@"

OPENMP_CFLAGS="@OPENMP_CFLAGS@"
OPENMP_CXXFLAGS="@OPENMP_CXXFLAGS@"
OPENMP_FCFLAGS="@OPENMP_FCFLAGS@"

@HAVE_FORTRAN_SUPPORT_TRUE@have_fortran=true
@HAVE_FORTRAN_SUPPORT_FALSE@have_fortran=false

@HAVE_OPENMP_CXX_SUPPORT_TRUE@have_omp_cxx=true
@HAVE_OPENMP_CXX_SUPPORT_FALSE@have_omp_cxx=false
@HAVE_OPENMP_FC_SUPPORT_TRUE@have_omp_fc=true
@HAVE_OPENMP_FC_SUPPORT_FALSE@have_omp_fc=false

cat <<_EOF

SRCDIR = $SRCDIR
BINDIR = $BINDIR
OBJEXT = $OBJEXT
EXEEXT = $EXEEXT

CC = $CC
CCLD = $CC
CXX = $CXX
CXXLD = $CXX
FC = $FC
FCLD = $FC

scorep__tty_colors = \
red=; grn=; blu=; mgn=; std=; \
test "X\$(AM_COLOR_TESTS)" != Xno \
&& test "X\$\$TERM" != Xdumb \
&& { test "X\$(AM_COLOR_TESTS)" = Xalways || test -t 1 2>/dev/null; } \
&& { \
  red='[0;31m'; \
  grn='[0;32m'; \
  blu='[1;34m'; \
  mgn='[0;35m'; \
  std='[m'; \
}

AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@

SCOREP_V_CC = \$(scorep__v_CC_\$(V))
scorep__v_CC_ = \$(scorep__v_CC_\$(AM_DEFAULT_VERBOSITY))
scorep__v_CC_0 = @\$(scorep__tty_colors); echo "  SCOREP CC     \$\${blu}\$@\$\$std";
SCOREP_V_CCLD = \$(scorep__v_CCLD_\$(V))
scorep__v_CCLD_ = \$(scorep__v_CCLD_\$(AM_DEFAULT_VERBOSITY))
scorep__v_CCLD_0 = @\$(scorep__tty_colors); echo "  SCOREP CCLD   \$\${grn}\$@\$\$std";

SCOREP_V_CXX = \$(scorep__v_CXX_\$(V))
scorep__v_CXX_ = \$(scorep__v_CXX_\$(AM_DEFAULT_VERBOSITY))
scorep__v_CXX_0 = @\$(scorep__tty_colors); echo "  SCOREP CXX    \$\${blu}\$@\$\$std";
SCOREP_V_CXXLD = \$(scorep__v_CXXLD_\$(V))
scorep__v_CXXLD_ = \$(scorep__v_CXXLD_\$(AM_DEFAULT_VERBOSITY))
scorep__v_CXXLD_0 = @\$(scorep__tty_colors); echo "  SCOREP CXXLD  \$\${grn}\$@\$\$std";

SCOREP_V_FC = \$(scorep__v_FC_\$(V))
scorep__v_FC_ = \$(scorep__v_FC_\$(AM_DEFAULT_VERBOSITY))
scorep__v_FC_0 = @\$(scorep__tty_colors); echo "  SCOREP FC     \$\${blu}\$@\$\$std";
SCOREP_V_FCLD = \$(scorep__v_FCLD_\$(V))
scorep__v_FCLD_ = \$(scorep__v_FCLD_\$(AM_DEFAULT_VERBOSITY))
scorep__v_FCLD_0 = @\$(scorep__tty_colors); echo "  SCOREP FCLD   \$\${grn}\$@\$\$std";

SCOREP_V_verbose = \$(scorep__v_verbose_\$(V))
scorep__v_verbose_ =
scorep__v_verbose_1 = --verbose
scorep__v_verbose_2 = --verbose=2

# we need at least one active adapter, else scorep-config wont spill out any libs
SCOREP=\$(BINDIR)/scorep \$(SCOREP_V_verbose) --user --nocompiler --mpp=none

all:

_EOF

paradigm_threads="none"
@HAVE_OPENMP_C_SUPPORT_TRUE@paradigm_threads="$paradigm_threads omp"

for thread in $paradigm_threads
do
    target=$(echo "${thread}" | tr ":" "_")

    cflags=
    cxxflags=
    fcflags=
    case $thread in
        (omp)
            cflags="$cflags $OPENMP_CFLAGS"
            cxxflags="$cxxflags $OPENMP_CXXFLAGS"
            fcflags="$fcflags $OPENMP_FCFLAGS"
        ;;
    esac

    cat <<_EOF

all: bin/test_constructor_check_${target}_c\$(EXEEXT)

test_constructor_check_${target}_c.\$(OBJEXT): \\
    \$(SRCDIR)/test/constructor_checks/constructor_check.c \\
    \$(BINDIR)/scorep \$(BINDIR)/scorep-config
	\$(SCOREP_V_CCLD)\$(SCOREP) --thread=$thread \$(CC) $cflags -c -o \$@ \$<

bin/test_constructor_check_${target}_c\$(EXEEXT): \\
    test_constructor_check_${target}_c.\$(OBJEXT) \\
    \$(BINDIR)/scorep \$(BINDIR)/scorep-config
	\$(SCOREP_V_CCLD)\$(SCOREP) --thread=$thread \$(CCLD) $cflags \$< -o \$@

_EOF

    if test $thread = none || $have_omp_cxx; then

    cat <<_EOF

all: bin/test_constructor_check_${target}_cxx\$(EXEEXT)

test_constructor_check_${target}_cxx.\$(OBJEXT): \\
    \$(SRCDIR)/test/constructor_checks/constructor_check.cxx \\
    \$(BINDIR)/scorep \$(BINDIR)/scorep-config
	\$(SCOREP_V_CCLD)\$(SCOREP) --thread=$thread \$(CXX) $cxxflags -c -o \$@ \$<

bin/test_constructor_check_${target}_cxx\$(EXEEXT): \\
    test_constructor_check_${target}_cxx.\$(OBJEXT) \\
    \$(BINDIR)/scorep \$(BINDIR)/scorep-config
	\$(SCOREP_V_CCLD)\$(SCOREP) --thread=$thread \$(CXXLD) $cflags \$< -o \$@

_EOF

    fi #test $thread = none || $have_omp_cxx

    if $have_fortran; then
        if test $thread = none || $have_omp_fc; then

    cat <<_EOF

all: bin/test_constructor_check_${target}_f\$(EXEEXT)

test_constructor_check_${target}_f.\$(OBJEXT): \\
    \$(SRCDIR)/test/constructor_checks/constructor_check.F90 \\
    \$(BINDIR)/scorep \$(BINDIR)/scorep-config
	\$(SCOREP_V_CCLD)\$(SCOREP) --thread=$thread \$(FC) $fcflags -c -o \$@ \$<

bin/test_constructor_check_${target}_f\$(EXEEXT): \\
    test_constructor_check_${target}_f.\$(OBJEXT) \\
    \$(BINDIR)/scorep \$(BINDIR)/scorep-config
	\$(SCOREP_V_CCLD)\$(SCOREP) --thread=$thread \$(FCLD) $fcflags \$< -o \$@

_EOF
        fi #test $thread = none || $have_omp_fc
    fi #have_fortran

done #thread
