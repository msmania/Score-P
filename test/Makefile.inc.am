## -*- mode: makefile -*-

##
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2014-2018, 2020, 2022,
## Forschungszentrum Juelich GmbH, Germany
##
## Copyright (c) 2014-2016, 2019,
## Technische Universitaet Dresden, Germany
##
## Copyright (c) 2015-2016,
## Technische Universitaet Muenchen, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license.  See the COPYING file in the package base
## directory for details.
##

## file test/Makefile.inc.am

# ------------------------------------------------------------------------------

# Below, helper libs and variables from before multilib aera, needed
# for 'make check' targets only. Used to be the four monolithic
# libraries. Might vanish in future.

# Usage: if your test requires one of the monolithic libs, use
# $(<paradigm>_libadd) and $(<paradigm>_ldflags) for your
# <target>_LDADD and <target>_LDFLAGS. <paradigm> is out of serial,
# omp, mpi, and mpi_omp. mpi and mpi_omp are defined in
# test/Makefile.mpi.inc.am.

external_libadd = \
    @OTF2_LIBS@         \
    @SCOREP_PAPI_LIBS@  \
    @SCOREP_DLFCN_LIBS@ \
    @CUBEW_LIBS@

external_ldflags = \
    @OTF2_LDFLAGS@        \
    @SCOREP_LIBBFD_LDFLAGS@      \
    @SCOREP_LIBUNWIND_LDFLAGS@      \
    @SCOREP_PAPI_LDFLAGS@ \
    @CUBEW_LDFLAGS@ \
    @CUDA_LDFLAGS@        \
    @OPENCL_LDFLAGS@

if HAVE_GNU_LINKER
if BUILD_SHARED_LIBRARIES
external_ldflags += -Wl,--no-as-needed
endif BUILD_SHARED_LIBRARIES
endif HAVE_GNU_LINKER

common_event_libadd = \
    libscorep_adapter_user_event.la

common_mgmt_libadd = \
    libscorep_adapter_user_mgmt.la      \
    libscorep_measurement.la

if HAVE_SCOREP_COMPILER_INSTRUMENTATION

common_event_libadd += \
    libscorep_adapter_compiler_event.la

common_mgmt_libadd += \
    libscorep_adapter_compiler_mgmt.la

external_ldflags += $(SCOREP_COMPILER_INSTRUMENTATION_LDFLAGS)

endif HAVE_SCOREP_COMPILER_INSTRUMENTATION

if HAVE_CUDA_TESTS
common_mgmt_libadd += \
    libscorep_adapter_cuda_mgmt.la \
    libscorep_alloc_metric.la
endif HAVE_CUDA_TESTS

common_cppflags = \
    $(AM_CPPFLAGS)                       \
    -I$(INC_ROOT)src/adapters/include    \
    -I$(INC_ROOT)src/services/include    \
    -I$(INC_ROOT)src/measurement/include \
    -I$(INC_ROOT)src/measurement         \
    -I$(PUBLIC_INC_DIR)                  \
    $(UTILS_CPPFLAGS)

## MPI -------------------------------------------------------------------------

if HAVE_MPI_SUPPORT

MPI_CHECK_TARGETS += \
    $(LIB_DIR_SCOREP_MPI)libscorep_adapter_mpi_event.la \
    $(LIB_DIR_SCOREP_MPI)libscorep_adapter_mpi_mgmt.la \
    $(LIB_DIR_SCOREP_MPI)libscorep_mpp_mpi.la

check_LTLIBRARIES                          += libscorep_mpi_event.la
libscorep_mpi_event_la_SOURCES              =
libscorep_mpi_event_la_CPPFLAGS             = $(common_cppflags)
libscorep_mpi_event_la_LIBADD               = \
    $(LIB_DIR_SCOREP_MPI)libscorep_adapter_mpi_event.la \
    $(common_event_libadd)

check_LTLIBRARIES             += libscorep_mpi_mgmt.la
libscorep_mpi_mgmt_la_SOURCES  =
libscorep_mpi_mgmt_la_CPPFLAGS = $(common_cppflags)
libscorep_mpi_mgmt_la_LIBADD   = \
    $(common_mgmt_libadd)                                   \
    $(LIB_DIR_SCOREP_MPI)libscorep_adapter_mpi_mgmt.la      \
    libscorep_alloc_metric.la                               \
    $(LIB_DIR_SCOREP_MPI)libscorep_mpp_mpi.la               \
    $(external_libadd)                                      \
    libscorep_thread_mockup.la
libscorep_mpi_mgmt_la_LDFLAGS              = $(external_ldflags)

endif HAVE_MPI_SUPPORT

## SHMEM -------------------------------------------------------------------------

if HAVE_SHMEM_SUPPORT

SHMEM_CHECK_TARGETS += \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_adapter_shmem_mgmt.la \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_adapter_shmem_event.la \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_mpp_shmem.la

check_LTLIBRARIES                            += libscorep_shmem_event.la
libscorep_shmem_event_la_SOURCES              =
libscorep_shmem_event_la_CPPFLAGS             = $(common_cppflags)
libscorep_shmem_event_la_LIBADD               = \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_adapter_shmem_event.la \
    $(common_event_libadd)

check_LTLIBRARIES             += libscorep_shmem_mgmt.la
libscorep_shmem_mgmt_la_SOURCES  =
libscorep_shmem_mgmt_la_CPPFLAGS = $(common_cppflags)
libscorep_shmem_mgmt_la_LIBADD   = \
    $(common_mgmt_libadd)                                  \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_adapter_shmem_mgmt.la \
    libscorep_alloc_metric.la                              \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_mpp_shmem.la          \
    $(external_libadd)                                     \
    libscorep_thread_mockup.la
libscorep_shmem_mgmt_la_LDFLAGS              = $(external_ldflags)

endif HAVE_SHMEM_SUPPORT

## Serial ----------------------------------------------------------------------

serial_libadd = \
    $(common_event_libadd) \
    libscorep_subsystems_serial_la-scorep_monolithic_subsystems.lo \
    $(common_mgmt_libadd) \
    $(external_libadd) \
    libscorep_mpp_mockup.la \
    libscorep_thread_mockup.la

serial_ldflags = $(external_ldflags) $(LINKMODE_FLAGS)

## OpenMP ----------------------------------------------------------------------

if HAVE_OPENMP_C_SUPPORT

if HAVE_SCOREP_OMP_TPD

omp_libadd = \
    libscorep_adapter_opari2_openmp_event.la \
    $(common_event_libadd) \
    libscorep_subsystems_omp_la-scorep_monolithic_subsystems.lo \
    $(common_mgmt_libadd) \
    $(external_libadd) \
    libscorep_adapter_opari2_openmp_mgmt.la \
    libscorep_mpp_mockup.la \
    libscorep_thread_fork_join_omp.la

omp_ldflags = $(external_ldflags) $(LINKMODE_FLAGS)

endif HAVE_SCOREP_OMP_TPD

endif HAVE_OPENMP_C_SUPPORT

## Hybrid ----------------------------------------------------------------------

if HAVE_MPI_SUPPORT
if HAVE_OPENMP_C_SUPPORT
if HAVE_SCOREP_OMP_TPD

check_LTLIBRARIES                       += libscorep_mpi_omp_event.la
libscorep_mpi_omp_event_la_SOURCES              =
libscorep_mpi_omp_event_la_CFLAGS               = $(AM_CFLAGS) $(OPENMP_CFLAGS)
libscorep_mpi_omp_event_la_CPPFLAGS             = $(common_cppflags)
libscorep_mpi_omp_event_la_LIBADD               = \
    $(LIB_DIR_SCOREP_MPI)libscorep_adapter_mpi_event.la \
    libscorep_adapter_opari2_openmp_event.la \
    $(common_event_libadd)

check_LTLIBRARIES                 += libscorep_mpi_omp_mgmt.la
libscorep_mpi_omp_mgmt_la_SOURCES  =
libscorep_mpi_omp_mgmt_la_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
libscorep_mpi_omp_mgmt_la_CPPFLAGS = $(common_cppflags)
libscorep_mpi_omp_mgmt_la_LIBADD   = \
    $(common_mgmt_libadd)                                   \
    $(external_libadd)                                      \
    $(LIB_DIR_SCOREP_MPI)libscorep_adapter_mpi_mgmt.la      \
    libscorep_alloc_metric.la                               \
    libscorep_adapter_opari2_openmp_mgmt.la                 \
    $(LIB_DIR_SCOREP_MPI)libscorep_mpp_mpi.la               \
    libscorep_thread_fork_join_omp.la

endif HAVE_SCOREP_OMP_TPD
endif HAVE_OPENMP_C_SUPPORT
endif HAVE_MPI_SUPPORT

if HAVE_SHMEM_SUPPORT
if HAVE_OPENMP_C_SUPPORT

check_LTLIBRARIES                       += libscorep_shmem_omp_event.la
libscorep_shmem_omp_event_la_SOURCES              =
libscorep_shmem_omp_event_la_CFLAGS               = $(AM_CFLAGS) $(OPENMP_CFLAGS)
libscorep_shmem_omp_event_la_CPPFLAGS             = $(common_cppflags)
libscorep_shmem_omp_event_la_LIBADD               = \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_adapter_shmem_event.la \
    libscorep_adapter_opari2_openmp_event.la                \
    libscorep_adapter_opari2_user_event.la                  \
    $(common_event_libadd)

check_LTLIBRARIES                   += libscorep_shmem_omp_mgmt.la
libscorep_shmem_omp_mgmt_la_SOURCES  =
libscorep_shmem_omp_mgmt_la_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
libscorep_shmem_omp_mgmt_la_CPPFLAGS = $(common_cppflags)
libscorep_shmem_omp_mgmt_la_LIBADD   = \
    $(common_mgmt_libadd)                                  \
    $(external_libadd)                                     \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_adapter_shmem_mgmt.la \
    libscorep_alloc_metric.la                              \
    libscorep_adapter_opari2_openmp_mgmt.la                \
    libscorep_adapter_opari2_user_mgmt.la                  \
    $(LIB_DIR_SCOREP_SHMEM)libscorep_mpp_shmem.la          \
    libscorep_thread_fork_join_omp.la
libscorep_shmem_omp_mgmt_la_LDFLAGS  = $(external_ldflags)

endif HAVE_OPENMP_C_SUPPORT
endif HAVE_SHMEM_SUPPORT

# ------------------------------------------------------------------------------

# Subsystems for <paradigm>_libadd

subsystems_paradigm_cppflags = \
    $(AM_CPPFLAGS)                       \
    -I$(INC_ROOT)src/measurement/include \
    $(UTILS_CPPFLAGS)                    \
    -I$(PUBLIC_INC_DIR)

check_LTLIBRARIES                      += libscorep_subsystems_serial.la
libscorep_subsystems_serial_la_SOURCES  = $(SRC_ROOT)test/scorep_monolithic_subsystems.c
libscorep_subsystems_serial_la_CPPFLAGS = $(subsystems_paradigm_cppflags)

if HAVE_OPENMP_C_SUPPORT

check_LTLIBRARIES                   += libscorep_subsystems_omp.la
libscorep_subsystems_omp_la_SOURCES  = $(SRC_ROOT)test/scorep_monolithic_subsystems.c
libscorep_subsystems_omp_la_CPPFLAGS = $(subsystems_paradigm_cppflags) -DSCOREP_SUBSYSTEMS_OMP

endif HAVE_OPENMP_C_SUPPORT

if HAVE_MPI_SUPPORT

check_LTLIBRARIES                   += libscorep_subsystems_mpi.la
libscorep_subsystems_mpi_la_SOURCES  = $(SRC_ROOT)test/scorep_monolithic_subsystems.c
libscorep_subsystems_mpi_la_CPPFLAGS = $(subsystems_paradigm_cppflags) -DSCOREP_SUBSYSTEMS_MPI

if HAVE_OPENMP_C_SUPPORT

check_LTLIBRARIES                       += libscorep_subsystems_mpi_omp.la
libscorep_subsystems_mpi_omp_la_SOURCES  = $(SRC_ROOT)test/scorep_monolithic_subsystems.c
libscorep_subsystems_mpi_omp_la_CPPFLAGS = $(subsystems_paradigm_cppflags) -DSCOREP_SUBSYSTEMS_MPI -DSCOREP_SUBSYSTEMS_OMP

endif HAVE_OPENMP_C_SUPPORT

endif HAVE_MPI_SUPPORT

if HAVE_SHMEM_SUPPORT

check_LTLIBRARIES                     += libscorep_subsystems_shmem.la
libscorep_subsystems_shmem_la_SOURCES  = $(SRC_ROOT)test/scorep_monolithic_subsystems.c
libscorep_subsystems_shmem_la_CPPFLAGS = $(subsystems_paradigm_cppflags) -DSCOREP_SUBSYSTEMS_SHMEM

if HAVE_OPENMP_C_SUPPORT

check_LTLIBRARIES                         += libscorep_subsystems_shmem_omp.la
libscorep_subsystems_shmem_omp_la_SOURCES  = $(SRC_ROOT)test/scorep_monolithic_subsystems.c
libscorep_subsystems_shmem_omp_la_CPPFLAGS = $(subsystems_paradigm_cppflags) -DSCOREP_SUBSYSTEMS_SHMEM -DSCOREP_SUBSYSTEMS_OMP

endif HAVE_OPENMP_C_SUPPORT

endif HAVE_SHMEM_SUPPORT

# ------------------------------------------------------------------------------

check_PROGRAMS += hello_functions

hello_functions_SOURCES =  $(SRC_ROOT)test/hello_functions.c
hello_functions_CPPFLAGS = $(AM_CPPFLAGS) \
    -I$(INC_ROOT)src/adapters/include     \
    -I$(INC_ROOT)src/measurement/include  \
    $(UTILS_CPPFLAGS)
