#!/bin/bash

##
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2012,
## RWTH Aachen University, Germany
##
## Copyright (c) 2009-2012,
## Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##
## Copyright (c) 2009-2012, 2019, 2022,
## Technische Universitaet Dresden, Germany
##
## Copyright (c) 2009-2012,
## University of Oregon, Eugene, USA
##
## Copyright (c) 2009-2012,
## Forschungszentrum Juelich GmbH, Germany
##
## Copyright (c) 2009-2012,
## German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##
## Copyright (c) 2009-2012,
## Technische Universitaet Muenchen, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license.  See the COPYING file in the package base
## directory for details.
##
##

## file       run_rusage_openmp_per_process_metric_test.sh

OTF2_PRINT="@OTF2_BINDIR@/otf2-print"
TEST_DATA_DIR="@abs_top_srcdir@/../test/services/metric/data"

# Set up directory that will contain experiment results
RESULT_DIR=$PWD/scorep-openmp-rusage-per-process-metric-test-dir
rm -rf $RESULT_DIR

# Run test
SCOREP_EXPERIMENT_DIRECTORY=$RESULT_DIR OMP_NUM_THREADS=2 SCOREP_ENABLE_PROFILING=false SCOREP_ENABLE_TRACING=true SCOREP_METRIC_RUSAGE_SEP=, SCOREP_METRIC_RUSAGE=ru_utime SCOREP_METRIC_RUSAGE_PER_PROCESS=ru_stime,ru_maxrss ./jacobi_omp_c_metric_test
if [ $? -ne 0 ]; then
    rm -rf scorep-measurement-tmp
    exit 1
fi
echo "Output of metric test can be found in $RESULT_DIR"

# Check metric definitions
$OTF2_PRINT -G $RESULT_DIR/traces.otf2 |
    grep '^METRIC_' |
    LC_ALL=C sed -e 's/^METRIC_\(MEMBER\)[[:blank:]][[:blank:]]*/METRIC_\1 /g' \
                 -e 's/^METRIC_\(CLASS\)[[:blank:]][[:blank:]]*/METRIC_\1 /g' \
                 -e 's/^METRIC_\(INSTANCE\)[[:blank:]][[:blank:]]*/METRIC_\1 /g' \
                 -e 's/Name: "\([^"]*\)" <[[:digit:]][[:digit:]]*>/Name: "\1" <id>/g' \
                 -e 's/Descr\.: "[^"]*" <[[:digit:]][[:digit:]]*>/Descr.: "<string>" <id>/g' \
                 -e 's/Unit: "\([^"]*\)" <[[:digit:]][[:digit:]]*>/Unit: "\1" <id>/g' > trace.txt
if diff $TEST_DATA_DIR/jacobi_c_openmp_rusage_per_process_metric_definitions.out trace.txt > /dev/null
  then
    true
  else
    echo "-------- ERROR: in metric definition output --------" >&2
    diff -u $TEST_DATA_DIR/jacobi_c_openmp_rusage_per_process_metric_definitions.out trace.txt >&2
    rm trace.txt
    exit 1
fi

# Check metric events of first location (main thread, records per-process metrics)
$OTF2_PRINT --location 0 $RESULT_DIR/traces.otf2 | grep '^METRIC ' > trace.txt
if [ x`grep -c METRIC trace.txt` = x`grep -c METRIC $TEST_DATA_DIR/jacobi_c_openmp_rusage_per_process_metric_events_1.out` ]; then
    rm trace.txt
  else
    echo "-------- ERROR: in metric event output of first location --------" >&2
    diff -u $TEST_DATA_DIR/jacobi_c_openmp_rusage_per_process_metric_events_1.out trace.txt >&2
    rm trace.txt
    exit 1
fi

# Check metric events of second location (additional worker thread, per-process metrics must not be recorded by this location)
$OTF2_PRINT --location 4294967296 $RESULT_DIR/traces.otf2 | grep '^METRIC ' > trace.txt
if [ x`grep -c METRIC trace.txt` = x`grep -c METRIC $TEST_DATA_DIR/jacobi_c_openmp_rusage_per_process_metric_events_2.out` ]; then
    rm trace.txt
    exit 0
  else
    echo "-------- ERROR: in metric event output of second location --------" >&2
    diff -u $TEST_DATA_DIR/jacobi_c_openmp_rusage_per_process_metric_events.out trace.txt >&2
    rm trace.txt
    exit 1
fi
