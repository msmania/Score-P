## -*- mode: makefile -*-

##
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2011,
## RWTH Aachen University, Germany
##
## Copyright (c) 2009-2011,
## Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##
## Copyright (c) 2009-2011, 2014-2015,
## Technische Universitaet Dresden, Germany
##
## Copyright (c) 2009-2011,
## University of Oregon, Eugene, USA
##
## Copyright (c) 2009-2014, 2022,
## Forschungszentrum Juelich GmbH, Germany
##
## Copyright (c) 2009-2011, 2014,
## German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##
## Copyright (c) 2009-2011,
## Technische Universitaet Muenchen, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license. See the COPYING file in the package base
## directory for details.
##

## file       Makefile.inc.am

if HAVE_OPENMP_C_SUPPORT

check_PROGRAMS += omp_test_uninstrumented

omp_test_uninstrumented_SOURCES  = $(SRC_ROOT)test/omp/omp_test.c
omp_test_uninstrumented_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
#omp_test_uninstrumented_CPPFLAGS = $(AM_CPPFLAGS)
#omp_test_uninstrumented_LDADD    = $(omp_libadd)

#TESTS_OMP += omp_test_uninstrumented

if HAVE_SCOREP_OMP_TPD

check_PROGRAMS += omp_test

omp_test_SOURCES  = $(SRC_ROOT)test/omp/omp_test.mod.c       \
                    $(SRC_ROOT)test/omp/omp_test.c.opari.inc \
                    $(SRC_ROOT)test/omp/pomp.c
omp_test_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
omp_test_CPPFLAGS = $(AM_CPPFLAGS) @OPARI2_CPPFLAGS@
omp_test_LDADD    = $(omp_libadd)
omp_test_LDFLAGS  = $(omp_ldflags)

TESTS_OMP += $(srcdir)/../test/omp/run_omp_test.sh

TESTS_OMP += $(srcdir)/../test/omp/run_omp_test_profile.sh


check_PROGRAMS += internal_thread_handling

internal_thread_handling_SOURCES  = $(SRC_ROOT)test/omp/internal_thread_handling.c \
                                    $(SRC_ROOT)test/omp/omp_test.c.opari.inc \
                                    $(SRC_ROOT)test/omp/pomp.c
internal_thread_handling_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
internal_thread_handling_CPPFLAGS = $(AM_CPPFLAGS) @OPARI2_CPPFLAGS@
internal_thread_handling_LDADD    = $(omp_libadd)
internal_thread_handling_LDFLAGS  = $(omp_ldflags)

TESTS_OMP += $(srcdir)/../test/omp/run_internal_thread_handling.sh


endif HAVE_SCOREP_OMP_TPD

if ! SCOREP_COMPILER_CC_PGI
# The PGI compilers do currently not support nested
# parallelism. Therefore testing this functionality does not make any
# sense.

if HAVE_SCOREP_OMP_TPD

check_PROGRAMS += omp_test_nested

# do not instrument the OPARI2 generated POMP code
check_LTLIBRARIES                  += libomp_test_nested_pomp.la
libomp_test_nested_pomp_la_SOURCES  = $(SRC_ROOT)test/omp/pomp_nested.c
libomp_test_nested_pomp_la_CPPFLAGS = $(AM_CPPFLAGS)

omp_test_nested_SOURCES  = $(SRC_ROOT)test/omp/pomp_nested.c \
                           $(SRC_ROOT)test/omp/omp_test_nested.mod.c \
                           $(SRC_ROOT)test/omp/omp_test_nested.c.opari.inc
omp_test_nested_CFLAGS   = $(AM_CFLAGS) $(OPENMP_CFLAGS)
omp_test_nested_CPPFLAGS = $(AM_CPPFLAGS) @OPARI2_CPPFLAGS@
omp_test_nested_LDADD    = $(omp_libadd)
omp_test_nested_LDFLAGS  = $(omp_ldflags)

TESTS_OMP += $(srcdir)/../test/omp/run_omp_test_nested.sh

TESTS_OMP += $(srcdir)/../test/omp/run_omp_test_nested_profile.sh

endif HAVE_SCOREP_OMP_TPD

endif !SCOREP_COMPILER_CC_PGI

endif HAVE_OPENMP_C_SUPPORT

EXTRA_DIST += $(SRC_ROOT)test/omp/run_omp_test.sh \
              $(SRC_ROOT)test/omp/run_omp_test_profile.sh \
              $(SRC_ROOT)test/omp/run_internal_thread_handling.sh \
              $(SRC_ROOT)test/omp/run_omp_test_nested.sh \
              $(SRC_ROOT)test/omp/run_omp_test_nested_profile.sh
