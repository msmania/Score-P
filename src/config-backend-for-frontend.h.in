/* Generated from src/config-backend.h.in by build-config/common/generate-config-backend-for-frontend.sh.  */


/* Compiler constructor support */
#undef HAVE_BACKEND_COMPILER_CONSTRUCTOR_SUPPORT

/* Defined if cuda is available. */
#undef HAVE_BACKEND_CUDA_SUPPORT

/* Defined if CUDA tests will be run. */
#undef HAVE_BACKEND_CUDA_TESTS

/* Defined if dlfcn.h provides RTLD_NEXT option for calls to dlsym function.
   */
#undef HAVE_BACKEND_DLFCN_RTLD_NEXT

/* Defined if dynamic linking via dlfcn.h is supported. */
#undef HAVE_BACKEND_DLFCN_SUPPORT

/* Defined if getrusage() is available. */
#undef HAVE_BACKEND_GETRUSAGE

/* Defined if the linker is GNU ld. */
#undef HAVE_BACKEND_GNU_LINKER

/* Defined if hip is available. */
#undef HAVE_BACKEND_HIP_SUPPORT

/* Defined if Kokkos is supported. */
#undef HAVE_BACKEND_KOKKOS_SUPPORT

/* Define if linktime library wrapping is possible. */
#undef HAVE_BACKEND_LIBWRAP_LINKTIME_SUPPORT

/* Define if runtime library wrapping is possible. */
#undef HAVE_BACKEND_LIBWRAP_RUNTIME_SUPPORT

/* Define if library wrapping is possible at all. */
#undef HAVE_BACKEND_LIBWRAP_SUPPORT

/* Defined if recording calls to Lustre-API is possible. */
#undef HAVE_BACKEND_LUSTRE_API_SUPPORT

/* Define if memory tracking is supported. */
#undef HAVE_BACKEND_MEMORY_SUPPORT

/* Defined if metric perf support is available. */
#undef HAVE_BACKEND_METRIC_PERF

/* Defined if MPI support is available. */
#undef HAVE_BACKEND_MPI_SUPPORT

/* Defined if NVIDIA NVML is available. */
#undef HAVE_BACKEND_NVML_SUPPORT

/* Defined if openacc.h has been found and OpenACC enabled. */
#undef HAVE_BACKEND_OPENACC

/* Defined if openacc.h and acc_prof.h have been found and OpenACC enabled */
#undef HAVE_BACKEND_OPENACC_SUPPORT

/* Defined if OpenCL is available. */
#undef HAVE_BACKEND_OPENCL_SUPPORT

/* Defined if OpenCL API version 1.0 is supported. */
#undef HAVE_BACKEND_OPENCL_VERSION_1_0_SUPPORT

/* Defined if OpenCL API version 1.1 is supported. */
#undef HAVE_BACKEND_OPENCL_VERSION_1_1_SUPPORT

/* Defined if OpenCL API version 1.2 is supported. */
#undef HAVE_BACKEND_OPENCL_VERSION_1_2_SUPPORT

/* Defined if OpenCL API version 2.0 is supported. */
#undef HAVE_BACKEND_OPENCL_VERSION_2_0_SUPPORT

/* Defined if OpenCL API version 2.1 is supported. */
#undef HAVE_BACKEND_OPENCL_VERSION_2_1_SUPPORT

/* Defined if OpenCL API version 2.2 is supported. */
#undef HAVE_BACKEND_OPENCL_VERSION_2_2_SUPPORT

/* Defined if libpapi is available. */
#undef HAVE_BACKEND_PAPI

/* Defined if PMI is available. */
#undef HAVE_BACKEND_PMI

/* Defined if recording calls to POSIX asynchronous I/O is possible. */
#undef HAVE_BACKEND_POSIX_AIO_SUPPORT

/* Defined if recording calls to POSIX I/O is possible. */
#undef HAVE_BACKEND_POSIX_IO_SUPPORT

/* Defined if sampling support is available. */
#undef HAVE_BACKEND_SAMPLING_SUPPORT

/* Defined if compiler instrumentation is supported at all */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION

/* Defined if CYG_PROFILE_FUNC compiler instrumentation API is supported for
   language C */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CC_CYG_PROFILE_FUNC

/* Defined if FUNC_TRACE compiler instrumentation API is supported for
   language C */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CC_FUNC_TRACE

/* Defined if GCC plug-in is supported for language */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CC_GCC_PLUGIN

/* Defined if PAT_TP_FUNC compiler instrumentation API is supported for
   language C */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CC_PAT_TP_FUNC

/* Defined if VT_INTEL compiler instrumentation API is supported for language
   C */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CC_VT_INTEL

/* Defined if CYG_PROFILE_FUNC compiler instrumentation API is supported for
   language C++ */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CXX_CYG_PROFILE_FUNC

/* Defined if FUNC_TRACE compiler instrumentation API is supported for
   language C++ */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CXX_FUNC_TRACE

/* Defined if GCC plug-in is supported for language */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CXX_GCC_PLUGIN

/* Defined if PAT_TP_FUNC compiler instrumentation API is supported for
   language C++ */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CXX_PAT_TP_FUNC

/* Defined if VT_INTEL compiler instrumentation API is supported for language
   C++ */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CXX_VT_INTEL

/* Defined if CYG_PROFILE_FUNC compiler instrumentation API is supported */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_CYG_PROFILE_FUNC

/* Defined if CYG_PROFILE_FUNC compiler instrumentation API is supported for
   language Fortran */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_FC_CYG_PROFILE_FUNC

/* Defined if FUNC_TRACE compiler instrumentation API is supported for
   language Fortran */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_FC_FUNC_TRACE

/* Defined if GCC plug-in is supported for language */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_FC_GCC_PLUGIN

/* Defined if PAT_TP_FUNC compiler instrumentation API is supported for
   language Fortran */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_FC_PAT_TP_FUNC

/* Defined if VT_INTEL compiler instrumentation API is supported for language
   Fortran */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_FC_VT_INTEL

/* Defined if FUNC_TRACE compiler instrumentation API is supported */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_FUNC_TRACE

/* Defined if GCC_PLUGIN compiler instrumentation API is supported */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_GCC_PLUGIN

/* Defined if one of the supported instrumentation APIs needs addr2line lookup
   */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_NEEDS_ADDR2LINE

/* Defined if PAT_TP_FUNC compiler instrumentation API is supported */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_PAT_TP_FUNC

/* Defined if VT_INTEL compiler instrumentation API is supported */
#undef HAVE_BACKEND_SCOREP_COMPILER_INSTRUMENTATION_VT_INTEL

/* Defined if OMPT is the default OpenMP instrumentation method. */
#undef HAVE_BACKEND_SCOREP_DEFAULT_OMPT

/* Defined if OMPT is supported for at least one language */
#undef HAVE_BACKEND_SCOREP_OMPT_SUPPORT

/* Timer aix available */
#undef HAVE_BACKEND_SCOREP_TIMER_AIX

/* Timer bgl available */
#undef HAVE_BACKEND_SCOREP_TIMER_BGL

/* Timer bgp available */
#undef HAVE_BACKEND_SCOREP_TIMER_BGP

/* Timer bgq available */
#undef HAVE_BACKEND_SCOREP_TIMER_BGQ

/* Timer clock_gettime available */
#undef HAVE_BACKEND_SCOREP_TIMER_CLOCK_GETTIME

/* The clk_id as string used in clock_gettime calls. */
#undef HAVE_BACKEND_SCOREP_TIMER_CLOCK_GETTIME_CLK_ID_NAME

/* Default timer */
#undef HAVE_BACKEND_SCOREP_TIMER_DEFAULT

/* Timer gettimeofday available */
#undef HAVE_BACKEND_SCOREP_TIMER_GETTIMEOFDAY

/* Timer mac available */
#undef HAVE_BACKEND_SCOREP_TIMER_MAC

/* Timer mingw available */
#undef HAVE_BACKEND_SCOREP_TIMER_MINGW

/* Timer tsc available */
#undef HAVE_BACKEND_SCOREP_TIMER_TSC

/* TSC timer */
#undef HAVE_BACKEND_SCOREP_TIMER_TSC_NAME

/* Defined if SHMEM Profiling Interface support is available. */
#undef HAVE_BACKEND_SHMEM_PROFILING_INTERFACE

/* Defined if SHMEM support is available. */
#undef HAVE_BACKEND_SHMEM_SUPPORT

/* Defined if thread local storage support is available. */
#undef HAVE_BACKEND_THREAD_LOCAL_STORAGE

/* Defined if unwinding support is available. */
#undef HAVE_BACKEND_UNWINDING_SUPPORT
