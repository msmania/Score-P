## -*- mode: makefile -*-

##
## This file is part of the Score-P software (http://www.score-p.org)
##
## Copyright (c) 2009-2013,
## RWTH Aachen University, Germany
##
## Copyright (c) 2009-2013,
## Gesellschaft fuer numerische Simulation mbH Braunschweig, Germany
##
## Copyright (c) 2009-2015,
## Technische Universitaet Dresden, Germany
##
## Copyright (c) 2009-2013,
## University of Oregon, Eugene, USA
##
## Copyright (c) 2009-2015,
## Forschungszentrum Juelich GmbH, Germany
##
## Copyright (c) 2009-2013,
## German Research School for Simulation Sciences GmbH, Juelich/Aachen, Germany
##
## Copyright (c) 2009-2013, 2015,
## Technische Universitaet Muenchen, Germany
##
## This software may be modified and distributed under the terms of
## a BSD-style license.  See the COPYING file in the package base
## directory for details.
##

# Common settings

noinst_LTLIBRARIES += libscorep_metric.la

scorep_metric_common_cppflags = $(AM_CPPFLAGS)     \
    $(UTILS_CPPFLAGS)                              \
    -I$(PUBLIC_INC_DIR)                            \
    -I$(INC_ROOT)src/services/include              \
    -I$(INC_ROOT)src/measurement/include           \
    -I$(INC_ROOT)src/measurement                   \
    -I$(INC_ROOT)src/measurement/profiling/include \
    -I$(INC_DIR_SUBSTRATES)                        \
    -I$(INC_DIR_COMMON_HASH)                       \
    -I$(INC_DIR_DEFINITIONS)

libscorep_metric_la_CPPFLAGS = $(scorep_metric_common_cppflags)

libscorep_metric_la_SOURCES = \
    $(SRC_ROOT)src/services/metric/SCOREP_Metric.h             \
    $(SRC_ROOT)src/services/include/SCOREP_Metric_Management.h \
    $(SRC_ROOT)src/services/metric/SCOREP_Metric_Source.h

if ! HAVE_PAPI
if ! HAVE_GETRUSAGE
if ! HAVE_DLFCN_SUPPORT
if ! HAVE_METRIC_PERF
libscorep_metric_la_SOURCES += $(SRC_ROOT)src/services/metric/scorep_metric_management_mockup.c
else
libscorep_metric_la_SOURCES += $(SRC_ROOT)src/services/metric/scorep_metric_management.c
endif
else
libscorep_metric_la_SOURCES += $(SRC_ROOT)src/services/metric/scorep_metric_management.c
endif
else
libscorep_metric_la_SOURCES += $(SRC_ROOT)src/services/metric/scorep_metric_management.c
endif
else
libscorep_metric_la_SOURCES += $(SRC_ROOT)src/services/metric/scorep_metric_management.c
endif

libscorep_metric_la_LIBADD =
libscorep_metric_la_LDFLAGS =

# RUSAGE specific settings

if HAVE_GETRUSAGE
noinst_LTLIBRARIES += libscorep_metric_rusage.la

libscorep_metric_rusage_la_CPPFLAGS = \
    $(scorep_metric_common_cppflags)  \
    @SCOREP_RUSAGE_CPPFLAGS@
libscorep_metric_rusage_la_SOURCES = \
    $(SRC_ROOT)src/services/metric/scorep_metric_rusage.c \
    $(SRC_ROOT)src/services/metric/scorep_metric_rusage.h

libscorep_metric_la_LIBADD += libscorep_metric_rusage.la
endif

# PAPI specific settings

if HAVE_PAPI
noinst_LTLIBRARIES += libscorep_metric_papi.la

libscorep_metric_papi_la_CPPFLAGS =  \
    $(scorep_metric_common_cppflags) \
    @SCOREP_PAPI_CPPFLAGS@
libscorep_metric_papi_la_SOURCES = \
    $(SRC_ROOT)src/services/metric/scorep_metric_papi.c \
    $(SRC_ROOT)src/services/metric/scorep_metric_papi.h

libscorep_metric_la_LIBADD += libscorep_metric_papi.la
endif

# Plugins source specific settings

if HAVE_DLFCN_SUPPORT
noinst_LTLIBRARIES += libscorep_metric_plugins.la

libscorep_metric_plugins_la_SOURCES = \
    $(SRC_ROOT)src/services/metric/scorep_metric_plugins.c \
    $(SRC_ROOT)src/services/metric/scorep_metric_plugins.h
libscorep_metric_plugins_la_CPPFLAGS = \
    $(scorep_metric_common_cppflags) \
    @SCOREP_TIMER_CPPFLAGS@

libscorep_metric_la_LIBADD += libscorep_metric_plugins.la
endif

# Perf source specific settings

if HAVE_METRIC_PERF
noinst_LTLIBRARIES += libscorep_metric_perf.la

libscorep_metric_perf_la_CPPFLAGS = $(scorep_metric_common_cppflags) -D_GNU_SOURCE
libscorep_metric_perf_la_SOURCES = \
    $(SRC_ROOT)src/services/metric/scorep_metric_perf.c \
    $(SRC_ROOT)src/services/metric/scorep_metric_perf.h

libscorep_metric_la_LIBADD += libscorep_metric_perf.la
endif
